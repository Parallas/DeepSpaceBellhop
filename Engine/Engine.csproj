<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <PlatformTarget>anycpu</PlatformTarget>

        <DefineConstants Condition=" '$(ExtraDefineConstants)' != '' ">$(DefineConstants);$(ExtraDefineConstants)</DefineConstants>
        <DefineConstants Condition=" '$(UseSteamworks)' != 'false' ">$(DefineConstants);STEAM</DefineConstants>
    </PropertyGroup>

    <ItemGroup>
      <TrimmerRootAssembly Include="MonoGame.Framework" />
      <TrimmerRootAssembly Include="mscorlib" />
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="FmodForFoxes" Version="3.2.0" />
      <PackageReference Include="Jarodwr.MonoGameImGuiNet" Version="1.0.0" />
      <PackageReference Include="MonoGame.Framework.DesktopGL" Version="3.8.2.1105" />
    </ItemGroup>

    <Choose>
      <!-- OSX -->
      <When Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
          $(DefineConstants), '^(.*;)*OSX(;.*)*$'))">
        <Choose>
          <When Condition=" '$(UseSteamworks)' != 'false' ">
            <ItemGroup>
              <None Update="libsteam_api.dylib">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
              </None>
            </ItemGroup>
          </When>
        </Choose>
        <ItemGroup>
          <None Update="libfmod.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodL.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodstudio.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodstudioL.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
        </ItemGroup>
      </When>

      <!-- Windows -->
      <When Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
          $(DefineConstants), '^(.*;)*WINDOWS(;.*)*$'))">
        <Choose>
          <When Condition=" '$(UseSteamworks)' != 'false' ">
            <ItemGroup>
              <None Update="steam_api64.dll">
                <CopyToOutputDirectory>Always</CopyToOutputDirectory>
              </None>
            </ItemGroup>
          </When>
        </Choose>
        <ItemGroup>
          <None Update="fmod.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="fmodL.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="fmodstudio.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="fmodstudioL.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
        </ItemGroup>
      </When>

      <!-- Linux -->
      <When Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
          $(DefineConstants), '^(.*;)*LINUX(;.*)*$'))">
        <Choose>
          <When Condition=" '$(UseSteamworks)' != 'false' ">
            <ItemGroup>
              <None Update="libsteam_api.so">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
              </None>
            </ItemGroup>
          </When>
        </Choose>
        <ItemGroup>
          <None Update="libfmodL.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmod.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodstudioL.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodstudio.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfsbankL.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfsbank.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfsbvorbis.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libicudata.so.56">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libicui18n.so.56">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libicuuc.so.56">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libopus.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Core.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5DBus.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Gui.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Widgets.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5XcbQpa.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Xml.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Network.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
        </ItemGroup>
      </When>

      <Otherwise>
        <Choose>
          <When Condition=" '$(UseSteamworks)' != 'false' ">
            <ItemGroup>
              <None Update="libsteam_api.dylib">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
              </None>
              <None Update="steam_api64.dll">
                <CopyToOutputDirectory>Always</CopyToOutputDirectory>
              </None>
              <None Update="libsteam_api.so">
                <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
              </None>
            </ItemGroup>
          </When>
        </Choose>
        <ItemGroup>
          <None Update="libfmod.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodL.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodstudio.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodstudioL.dylib">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>

          <None Update="fmod.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="fmodL.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="fmodstudio.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="fmodstudioL.dll">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>

          <None Update="libfmodL.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmod.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodstudioL.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfmodstudio.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfsbankL.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfsbank.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libfsbvorbis.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libicudata.so.56">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libicui18n.so.56">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libicuuc.so.56">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libopus.so">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Core.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5DBus.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Gui.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Widgets.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5XcbQpa.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Xml.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
          <None Update="libQt5Network.so.5">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
          </None>
        </ItemGroup>

      </Otherwise>
    </Choose>

    <Choose>
      <When Condition="'$(UseSteamworks)' != 'false'">
        <Choose>
          <When Condition="$([System.Text.RegularExpressions.Regex]::IsMatch(
            $(DefineConstants), '^(.*;)*WINDOWS(;.*)*$'))">
            <ItemGroup>
              <Reference Include="Facepunch.Steamworks.Win64" SpecificVersion="False">
                <HintPath>Facepunch.Steamworks.Win64.dll</HintPath>
              </Reference>
            </ItemGroup>
          </When>
          <Otherwise>
            <ItemGroup>
              <Reference Include="Facepunch.Steamworks.Posix" SpecificVersion="False">
                <HintPath>Facepunch.Steamworks.Posix.dll</HintPath>
              </Reference>
            </ItemGroup>
          </Otherwise>
        </Choose>
      </When>
    </Choose>

    <ItemGroup>
      <Reference Include="FmodForFoxes.Desktop">
        <HintPath>FmodForFoxes.Desktop.dll</HintPath>
      </Reference>
    </ItemGroup>

</Project>
